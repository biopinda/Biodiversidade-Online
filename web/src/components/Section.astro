---
import TaxonLink from './TaxonLink.astro'
const { title, kingdom, fields } = Astro.props as {
  title: string
  kingdom: string
  fields: Record<string, string | { link: string; text: string }>
}
const filteredFieldsArray = Object.entries(fields).reduce(
  (acc, [name, data], _, array) => {
    if (!name.endsWith(' ID')) {
      if (array.some(([otherName]) => otherName === `${name} ID`)) {
        // skip
        return acc
      }
    }
    acc.push({ name, data })
    return acc
  },
  [] as { name: string; data: string | { link: string; text: string } }[]
)
---

{
  title && filteredFieldsArray.length > 0 && (
    <h2 class="pt-2 font-bold">{title}</h2>
  )
}
{
  filteredFieldsArray.map(({ name, data }) => {
    return (
      data && (
        <div>
          <span class="font-semibold">{name.replace(' ID', '')}:</span>{' '}
          <span>
            {typeof data === 'string' ? (
              name.endsWith(' ID') ? (
                <TaxonLink kingdom={kingdom} taxonId={data} />
              ) : (
                data
              )
            ) : (
              <a href={data.link} class="text-green-800 underline">
                {(data as { text: string }).text}
              </a>
            )}
          </span>
        </div>
      )
    )
  })
}
