---
import Layout from '../layouts/base.astro'
import { 
  getCalFenoData, 
  generatePhenologicalHeatmap 
} from '../lib/mongo'
import {
  getCachedFamilies,
  getCachedGenera, 
  getCachedSpecies
} from '../lib/cache'

export const prerender = false

let families: string[] = []
let selectedFamily = ''
let genera: string[] = []
let selectedGenus = ''
let species: string[] = []
let selectedSpecies = ''
let heatmapData: any[] = []

try {
  families = await getCachedFamilies()
  
  const url = new URL(Astro.request.url)
  selectedFamily = url.searchParams.get('family') || ''
  selectedGenus = url.searchParams.get('genus') || ''
  selectedSpecies = url.searchParams.get('species') || ''
  
  if (selectedFamily) {
    genera = await getCachedGenera(selectedFamily)
    
    if (selectedGenus) {
      species = await getCachedSpecies(selectedFamily, selectedGenus)
      
      let filter: Record<string, any> = { family: selectedFamily, genus: selectedGenus }
      
      if (selectedSpecies) {
        filter.canonicalName = selectedSpecies
      }
      
      const occurrences = await getCalFenoData(filter)
      heatmapData = generatePhenologicalHeatmap(occurrences)
    } else {
      const occurrences = await getCalFenoData({ family: selectedFamily })
      heatmapData = generatePhenologicalHeatmap(occurrences)
    }
  }
} catch (error) {
  console.error('❌ Error loading phenological data:', error)
}
---

<Layout title="Calendário Fenológico">
  <div class="h-screen w-screen p-6">
    <div class="max-w-6xl mx-auto">
      <h1 class="text-3xl font-bold text-center mb-8 text-gray-800">
        Calendário Fenológico - Reino Plantae
      </h1>
      
      <div class="mb-8">
        <p class="text-gray-600 text-center mb-6">
          Visualize os períodos de floração das plantas através dos meses do ano. 
          Selecione uma família, gênero ou espécie para ver seu calendário fenológico.
        </p>
      </div>

      <!-- Filtros Hierárquicos -->
      <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
        <h2 class="text-xl font-semibold mb-4">Filtros Taxonômicos</h2>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
          <!-- Seleção de Família -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">
              Família
            </label>
            <select 
              id="family-select" 
              class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            >
              <option value="">Selecione uma família</option>
              {families.map(family => (
                <option value={family} selected={family === selectedFamily}>
                  {family}
                </option>
              ))}
            </select>
          </div>

          <!-- Seleção de Gênero -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">
              Gênero
            </label>
            <select 
              id="genus-select" 
              class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              disabled={!selectedFamily}
            >
              <option value="">Selecione um gênero</option>
              {genera.map(genus => (
                <option value={genus} selected={genus === selectedGenus}>
                  {genus}
                </option>
              ))}
            </select>
          </div>

          <!-- Seleção de Espécie -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">
              Espécie
            </label>
            <select 
              id="species-select" 
              class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              disabled={!selectedGenus}
            >
              <option value="">Selecione uma espécie</option>
              {species.map(sp => (
                <option value={sp} selected={sp === selectedSpecies}>
                  {sp}
                </option>
              ))}
            </select>
          </div>
        </div>
      </div>

      <!-- Mapa de Calor Fenológico -->
      {heatmapData.length > 0 && (
        <div class="bg-white rounded-lg shadow-lg p-6">
          <h2 class="text-xl font-semibold mb-4">
            Calendário Fenológico
            {selectedSpecies && ` - ${selectedSpecies}`}
            {!selectedSpecies && selectedGenus && ` - ${selectedGenus}`}
            {!selectedSpecies && !selectedGenus && selectedFamily && ` - ${selectedFamily}`}
          </h2>
          
          <div class="mb-4">
            <p class="text-sm text-gray-600">
              Intensidade de floração por mês (baseado em {heatmapData.reduce((sum, d) => sum + d.count, 0)} registros)
            </p>
          </div>

          <div class="grid grid-cols-12 gap-2 mb-4">
            {heatmapData.map(data => (
              <div class="text-center">
                <div 
                  class="w-full h-20 rounded-lg border border-gray-200 flex items-center justify-center text-sm font-medium text-white transition-all duration-300"
                  style={`background-color: hsl(${120 - data.intensity * 60}, 70%, ${50 + data.intensity * 30}%)`}
                  title={`${data.monthName}: ${data.count} registros`}
                >
                  {data.count}
                </div>
                <div class="text-xs font-medium text-gray-600 mt-1">
                  {data.monthName}
                </div>
              </div>
            ))}
          </div>

          <div class="flex items-center justify-between text-xs text-gray-500">
            <span>Menor intensidade</span>
            <div class="flex items-center space-x-1">
              <div class="w-4 h-4 bg-red-200 rounded"></div>
              <div class="w-4 h-4 bg-yellow-300 rounded"></div>
              <div class="w-4 h-4 bg-green-400 rounded"></div>
              <div class="w-4 h-4 bg-green-600 rounded"></div>
              <div class="w-4 h-4 bg-green-800 rounded"></div>
            </div>
            <span>Maior intensidade</span>
          </div>
        </div>
      )}

      {!selectedFamily && (
        <div class="bg-gray-50 rounded-lg p-8 text-center">
          <p class="text-gray-500 text-lg">
            Selecione uma família para visualizar o calendário fenológico
          </p>
        </div>
      )}
    </div>
  </div>

  <script>
    // JavaScript para interatividade dos filtros
    function updateURL() {
      const family = (document.getElementById('family-select') as HTMLSelectElement)?.value || '';
      const genus = (document.getElementById('genus-select') as HTMLSelectElement)?.value || '';
      const species = (document.getElementById('species-select') as HTMLSelectElement)?.value || '';
      
      const params = new URLSearchParams();
      if (family) params.set('family', family);
      if (genus) params.set('genus', genus);
      if (species) params.set('species', species);
      
      window.location.href = `${window.location.pathname}?${params.toString()}`;
    }

    document.getElementById('family-select')?.addEventListener('change', () => {
      const genusSelect = document.getElementById('genus-select') as HTMLSelectElement;
      const speciesSelect = document.getElementById('species-select') as HTMLSelectElement;
      
      // Reset dependent selects
      genusSelect.value = '';
      speciesSelect.value = '';
      
      updateURL();
    });

    document.getElementById('genus-select')?.addEventListener('change', () => {
      const speciesSelect = document.getElementById('species-select') as HTMLSelectElement;
      speciesSelect.value = '';
      
      updateURL();
    });

    document.getElementById('species-select')?.addEventListener('change', updateURL);
  </script>

  <style>
    .container {
      min-height: 100vh;
    }
    
    select:disabled {
      background-color: #f9fafb;
      color: #6b7280;
    }
    
    .heatmap-cell {
      transition: transform 0.2s ease;
    }
    
    .heatmap-cell:hover {
      transform: scale(1.05);
      z-index: 10;
      position: relative;
    }
  </style>
</Layout>