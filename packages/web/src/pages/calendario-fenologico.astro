---
import Layout from '@/layouts/base.astro'
import { getCalFenoData, generatePhenologicalHeatmap } from '@/lib/mongo'
import type { PhenologicalHeatmapCell } from '@/lib/mongo'
import {
  getCachedFamilies,
  getCachedGenera,
  getCachedSpecies
} from '@/lib/cache'

export const prerender = false

let families: string[] = []
let selectedFamily = ''
let genera: string[] = []
let selectedGenus = ''
let species: string[] = []
let selectedSpecies = ''
let heatmapData: PhenologicalHeatmapCell[] = []

try {
  families = await getCachedFamilies()

  const url = new URL(Astro.request.url)
  selectedFamily = url.searchParams.get('family') || ''
  selectedGenus = url.searchParams.get('genus') || ''
  selectedSpecies = url.searchParams.get('species') || ''

  if (selectedFamily) {
    genera = await getCachedGenera(selectedFamily)

    if (selectedGenus) {
      species = await getCachedSpecies(selectedFamily, selectedGenus)

      const filter: Record<string, unknown> = {
        family: selectedFamily,
        genus: selectedGenus
      }

      if (selectedSpecies) {
        filter.canonicalName = selectedSpecies
      }

      const occurrences = await getCalFenoData(filter)
      heatmapData = generatePhenologicalHeatmap(occurrences)
    } else {
      const occurrences = await getCalFenoData({ family: selectedFamily })
      heatmapData = generatePhenologicalHeatmap(occurrences)
    }
  }
} catch (error) {
  console.error('❌ Error loading phenological data:', error)
}
---

<Layout title="Calendário Fenológico">
  <div class="h-screen w-screen p-6">
    <div class="mx-auto max-w-6xl">
      <h1 class="mb-8 text-center text-3xl font-bold text-gray-800">
        Calendário Fenológico - Reino Plantae
      </h1>

      <div class="mb-8">
        <p class="mb-6 text-center text-gray-600">
          Visualize os períodos de floração das plantas através dos meses do
          ano. Selecione uma família, gênero ou espécie para ver seu calendário
          fenológico.
        </p>
      </div>

      <!-- Filtros Hierárquicos -->
      <div class="mb-8 rounded-lg bg-white p-6 shadow-lg">
        <h2 class="mb-4 text-xl font-semibold">Filtros Taxonômicos</h2>

        <div class="grid grid-cols-1 gap-4 md:grid-cols-3">
          <!-- Seleção de Família -->
          <div>
            <label class="mb-2 block text-sm font-medium text-gray-700">
              Família
            </label>
            <select
              id="family-select"
              class="w-full rounded-md border border-gray-300 p-2 focus:border-transparent focus:ring-2 focus:ring-blue-500"
            >
              <option value="">Selecione uma família</option>
              {
                families.map((family) => (
                  <option value={family} selected={family === selectedFamily}>
                    {family}
                  </option>
                ))
              }
            </select>
          </div>

          <!-- Seleção de Gênero -->
          <div>
            <label class="mb-2 block text-sm font-medium text-gray-700">
              Gênero
            </label>
            <select
              id="genus-select"
              class="w-full rounded-md border border-gray-300 p-2 focus:border-transparent focus:ring-2 focus:ring-blue-500"
              disabled={!selectedFamily}
            >
              <option value="">Selecione um gênero</option>
              {
                genera.map((genus) => (
                  <option value={genus} selected={genus === selectedGenus}>
                    {genus}
                  </option>
                ))
              }
            </select>
          </div>

          <!-- Seleção de Espécie -->
          <div>
            <label class="mb-2 block text-sm font-medium text-gray-700">
              Espécie
            </label>
            <select
              id="species-select"
              class="w-full rounded-md border border-gray-300 p-2 focus:border-transparent focus:ring-2 focus:ring-blue-500"
              disabled={!selectedGenus}
            >
              <option value="">Selecione uma espécie</option>
              {
                species.map((sp) => (
                  <option value={sp} selected={sp === selectedSpecies}>
                    {sp}
                  </option>
                ))
              }
            </select>
          </div>
        </div>
      </div>

      <!-- Mapa de Calor Fenológico -->
      {
        heatmapData.length > 0 && (
          <div class="rounded-lg bg-white p-6 shadow-lg">
            <h2 class="mb-4 text-xl font-semibold">
              Calendário Fenológico
              {selectedSpecies && ` - ${selectedSpecies}`}
              {!selectedSpecies && selectedGenus && ` - ${selectedGenus}`}
              {!selectedSpecies &&
                !selectedGenus &&
                selectedFamily &&
                ` - ${selectedFamily}`}
            </h2>

            <div class="mb-4">
              <p class="text-sm text-gray-600">
                Intensidade de floração por mês (baseado em{' '}
                {heatmapData.reduce((sum, d) => sum + d.count, 0)} registros)
              </p>
            </div>

            <div class="mb-4 grid grid-cols-12 gap-2">
              {heatmapData.map((data) => (
                <div class="text-center">
                  <div
                    class="flex h-20 w-full items-center justify-center rounded-lg border border-gray-200 text-sm font-medium text-white transition-all duration-300"
                    style={`background-color: hsl(${120 - data.intensity * 60}, 70%, ${50 + data.intensity * 30}%)`}
                    title={`${data.monthName}: ${data.count} registros`}
                  >
                    {data.count}
                  </div>
                  <div class="mt-1 text-xs font-medium text-gray-600">
                    {data.monthName}
                  </div>
                </div>
              ))}
            </div>

            <div class="flex items-center justify-between text-xs text-gray-500">
              <span>Menor intensidade</span>
              <div class="flex items-center space-x-1">
                <div class="h-4 w-4 rounded bg-red-200" />
                <div class="h-4 w-4 rounded bg-yellow-300" />
                <div class="h-4 w-4 rounded bg-green-400" />
                <div class="h-4 w-4 rounded bg-green-600" />
                <div class="h-4 w-4 rounded bg-green-800" />
              </div>
              <span>Maior intensidade</span>
            </div>
          </div>
        )
      }

      {
        !selectedFamily && (
          <div class="rounded-lg bg-gray-50 p-8 text-center">
            <p class="text-lg text-gray-500">
              Selecione uma família para visualizar o calendário fenológico
            </p>
          </div>
        )
      }
    </div>
  </div>

  <script>
    // @ts-nocheck
    // JavaScript para interatividade dos filtros
    /**
     * @param {string} id
     * @returns {string}
     */
    const getSelectValue = (id) => {
      const element = document.getElementById(id)
      return element instanceof HTMLSelectElement ? element.value : ''
    }

    /**
     * @param {string} id
     * @param {string} value
     */
    const setSelectValue = (id, value) => {
      const element = document.getElementById(id)
      if (element instanceof HTMLSelectElement) {
        element.value = value
      }
    }

    const updateURL = () => {
      const family = getSelectValue('family-select')
      const genus = getSelectValue('genus-select')
      const species = getSelectValue('species-select')

      const params = new URLSearchParams()
      if (family) params.set('family', family)
      if (genus) params.set('genus', genus)
      if (species) params.set('species', species)

      window.location.href = `${window.location.pathname}?${params.toString()}`
    }

    document.getElementById('family-select')?.addEventListener('change', () => {
      setSelectValue('genus-select', '')
      setSelectValue('species-select', '')
      updateURL()
    })

    document.getElementById('genus-select')?.addEventListener('change', () => {
      setSelectValue('species-select', '')
      updateURL()
    })

    document
      .getElementById('species-select')
      ?.addEventListener('change', updateURL)
  </script>

  <style>
    .container {
      min-height: 100vh;
    }

    select:disabled {
      background-color: #f9fafb;
      color: #6b7280;
    }

    .heatmap-cell {
      transition: transform 0.2s ease;
    }

    .heatmap-cell:hover {
      transform: scale(1.05);
      z-index: 10;
      position: relative;
    }
  </style>
</Layout>
